; Meatloaf PlatformIO Project Configuration File
;
; Quick Start Instructions:
;
;   Set the following options in this file:
;       in [meatloaf] section: Set your environment and flash_size
;       in [env] section: Set your upload_port and monitor_port
;
;   To build in VSCode, select the PlatformIO icon on the sidebar and expand
;   the section for the board you have chosen (ie, lolin-d32). First, choose
;   choose Upload under the General section, then choose Upload Filesystem 
;   image under the Platform section.
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[meatloaf]
description = Meatloaf Commodore to ESP32 WiFi Multifunction Firmware

; Uncomment ONLY ONE of the below lines to target the hardware you use
; GPIO pin assignments are located in the include/pinmap/ directory for reference
environment = lolin-d32-pro      ; Wemos Lolin D32 Pro                         (ESP32-WROVER 8M PSRAM, 4M/8M/16M Flash)
;environment = iec-nugget         ; Wemos Lolin D32 Pro (TFT Header)            (ESP32-WROVER 8M PSRAM, 4M/8M/16M Flash)
;environment = ttgo-t1            ; Lilygo TTGO T1 V1.3                         (ESP32 NO PSRAM, 4M Flash)
;environment = esp32-wroom        ; generic esp32-wroom board                   (ESP32-WROOM NO PSRAM, 4M/8M/16M Flash)
;environment = esp32-wroom-pi1541 ; generic esp32-wroom board with pi1541 hat   (ESP32-WROOM NO PSRAM, 4M/8M/16M Flash)
;environment = fujiapple-rev0     ; FujiApple REV0 with esp32-devkitc           (ESP32-WROVER 8M PSRAM, 8M Flash)
;environment = fujinet-v16        ; FujiNet v1.6                                (ESP32-WROVER 8M PSRAM, 16M Flash)
;environment = fujiloaf-rev0      ; Meatloaf / FujiNet REV0 board, aka Fujiloaf (ESP32-WROVER 8M PSRAM, 16M Flash)

; EXPERIMENTAL
;environment = esp32s3            ; esp32s3 devkitc                             (ESP32-S3 2M/8M PSRAM, 8M/16M/32M Flash)
;environment = lolin-s2-mini      ; Wemos Lolin S2 Mini                         (ESP32-S2 2M PSRAM, 4M Flash)

;environment = lolin-s3-pro       ; Wemos Lolin S3 Pro                          (ESP32-S3 8M PSRAM, 16M Flash)
;environment = esp32-s3-zero      ;                                             (ESP32-S3 2M PSRAM, 4M Flash)
;environment = esp32s3-DevKitC-1  ;

; NATIVE UNIT TESTING
;environment = native      ; For running tests that don't require embedded hardware

; Choose SPIFFS or LITTLEFS for the filesystem used on internal flash
;flash_filesystem = FLASH_SPIFFS 
flash_filesystem = FLASH_LITTLEFS

; Set default WiFi credentials
wifi_ssid = "meatloaf"
wifi_pass = "meatloaf"

; Required flags, leave as is
build_platform = BUILD_IEC
build_bus      = IEC

[platformio]
description = ${meatloaf.description}
default_envs = ${meatloaf.environment}
data_dir = data/${meatloaf.build_platform}

[esp32_base]
; Espressif32 PlatformIO Version to use for building
; https://github.com/platformio/platform-espressif32/releases
platform = espressif32 @ 6.3.2
;platform = espressif32 @ 6.7.0
framework = espidf
board_build.filesystem = littlefs
test_filter = embedded/*
extra_scripts = 
    pre:build_version.py
;    post:archive_firmware.py

[env]
; Common settings for all enivornments
build_type = debug ;debug ;release
lib_ldf_mode = deep+
upload_speed = 460800 ;460800 ;921600
;upload_port = COM1 ; Windows
;upload_port = /dev/ttyUSB0 ; Linux
;upload_port = /dev/cu.usbserial-144210 ; Mac
monitor_speed = 460800 ;460800 ;921600
;monitor_port = COM1 ; Windows
;monitor_port = /dev/ttyUSB0 ; Linux
;monitor_port = /dev/cu.usbserial-144210 ; Mac
monitor_filters = esp32_exception_decoder
check_skip_packages = yes
;debug_tool = esp-prog
;debug_init_break = tbreak setup

; Build flags used by ALL boards go here
build_flags =
    -D ${meatloaf.build_platform}
    -D ${meatloaf.flash_filesystem}
    -D CMAKE_EXPORT_COMPILE_COMMANDS=ON

    ; Default WiFi
    -D WIFI_SSID=\"${meatloaf.wifi_ssid}\"
    -D WIFI_PASSWORD=\"${meatloaf.wifi_pass}\"

    ; Firmware Version
    ;-D MEATLOAF_MAX

    ; IEC Hardware Options
    ; These options are also useful for reusing a PI1541 Hat with Meatloaf
    ;-D IEC_SPLIT_LINES     ; hardware uses seperate input/output lines
    ;-D IEC_INVERTED_LINES  ; hardware inverts the signals

    ; Other Hardware Options
    ;-D NO_BUTTONS          ; if your hardware has no physical buttons
    ;-D SD_CARD             ; if your hardware has an sd card slot
    ;-D RGB_LED_STRIP       ; if your hardware has an RGB LED strip
    ;-D PIEZO_BUZZER        ; if your hardware has a piezo buzzer
    ;-D PARALLEL_BUS        ; if your hardware has userport parallel interface
    ;-D JTAG                ; enable use with JTAG debugger
    ;-D BLUETOOTH_SUPPORT   ; enable BlueTooth support

    ; Service Options
    ;-D ENABLE_ZIMODEM      ; enable Zimodem functionality
    ;-D ENABLE_SSDP         ; enable Simple Service Discovery Protocol service

    ; GPIO Expander Selection (select only one if available)
    ;-D GPIOX_PCF8575
    ;-D GPIOX_MCP23017
    ;-D GPIOX_XRA1405

    ; Protocol Support
    ;-D JIFFYDOS

    ; Component Options
    -D QRCODEVERSION=8

    ; DEBUG Options
    -D DEBUG_SPEED=${env.monitor_speed}
    ;-D DATA_STREAM
    ;-D VERBOSE_TNFS
    ;-D VERBOSE_DISK
    ;-D VERBOSE_HTTP
    ;-D DEBUG_TIMING
    ;-D NO_VIRTUAL_KEYBOARD
    ;-D DBUG2 ; enable monitor messages for a release build
    ;-D RUN_TESTS

[env:native]
; Add Code Coverage Reporting
; https://piolabs.com/blog/insights/test-coverage-on-unit-testing.html
; https://blog.leon0399.ru/platformio-coverage-github-actions
platform = native
test_filter = native/*
extra_scripts = gen_coverage.py
build_flags =
    ${env.build_flags}
    -D TEST_NATIVE
    ;-lgcov
    ;--coverage
    ;-fprofile-abs-path

[env:fujiloaf-rev0]
extends = esp32_base
board = esp32-16mb
build_flags =
    ${env.build_flags}
    -D PINMAP_FUJILOAF_REV0
    -D SD_CARD
    -D RGB_LED_STRIP
    -D PARALLEL_BUS
    -D GPIOX_PCF8575
    -D MEATLOAF_MAX
    -D JIFFYDOS

[env:lolin-d32-pro]
extends = esp32_base
board = esp32-16mb
build_flags =
    ${env.build_flags}
    -D PINMAP_LOLIN_D32_PRO
    -D NO_BUTTONS
    -D SD_CARD

[env:iec-nugget]
extends = esp32_base
board = esp32-16mb
build_flags =
    ${env.build_flags}
    -D PINMAP_IEC_NUGGET
    -D NO_BUTTONS
    -D SD_CARD

[env:ttgo-t1]
extends = esp32_base
board = esp32-4mb
build_flags =
    ${env.build_flags}
    -D PINMAP_TTGO_T1
    -D SD_CARD

[env:esp32-wroom]
extends = esp32_base
board = esp32-4mb
build_flags =
    ${env.build_flags}
    -D PINMAP_WROOM

[env:esp32-wroom-pi1541]
extends = esp32_base
board = esp32-4mb
build_flags =
    ${env.build_flags}
    -D PINMAP_WROOM_1541
    -D NO_BUTTONS
    -D IEC_SPLIT_LINES
    -D IEC_INVERTED_LINES

[env:fujiapple-rev0]
extends = esp32_base
board = esp32-8mb
build_flags =
    ${env.build_flags}
    -D PINMAP_A2_REV0
    -D SD_CARD

[env:fujinet-v16]
extends = esp32_base
board = esp32-8mb
build_flags =
    ${env.build_flags}
    -D PINMAP_FN_16
    -D SD_CARD

[env:esp32s3]
extends = esp32_base
board = esp32-s3-4mb
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32S3
    -D SD_CARD

[env:lolin-s2-mini]
extends = esp32_base
board = esp32-s2-4mb
build_flags =
    ${env.build_flags}
    -D PINMAP_LOLIN_S2_MINI

[env:esp32-s3-zero]
extends = esp32_base
board = esp32-s3-zero
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32_S3_ZERO
    ;-D RGB_LED_STRIP

[env:lolin-s3-pro]
extends = esp32_base
board = lolin-s3-pro
build_flags =
    ${env.build_flags}
    -D PINMAP_LOLIN_S3_PRO
    -D SD_CARD
[env:esp32s3-DevKitC-1]
extends = esp32_base
board = esp32-s3-16mb
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32S3_DEVKITC_1